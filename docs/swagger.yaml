basePath: /
definitions:
  dto.CreatePostRequest:
    properties:
      content:
        type: string
      title:
        type: string
    required:
    - content
    - title
    type: object
  dto.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  dto.PostCommentRequest:
    properties:
      content:
        type: string
    required:
    - content
    type: object
  dto.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password_hash:
        type: string
    required:
    - email
    - name
    - password_hash
    type: object
  dto.Response:
    properties:
      data: {}
      message:
        type: string
    type: object
  dto.UpdatePostRequest:
    properties:
      content:
        type: string
      title:
        type: string
    required:
    - content
    - title
    type: object
  utils.ErrResponse:
    properties:
      detail:
        type: string
      status:
        type: integer
      type:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: muhlisiqbalutomo@gmail.com
    name: Muhlis Iqbal Utomo
  description: "Personal Blog powered by Bythen AI :) LFG\U0001F680"
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Blog Takehome
  version: 1.0.0
paths:
  /api/v1/login:
    post:
      consumes:
      - application/json
      description: Login user and embed a JWT-Auth in cookie
      parameters:
      - description: User login details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Login User
      tags:
      - User
  /api/v1/logout:
    post:
      consumes:
      - application/json
      description: Logout the current authenticated user and clears the authorization
        cookie
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Response'
      summary: Logout User
      tags:
      - User
  /api/v1/posts:
    get:
      consumes:
      - application/json
      description: Get all posts with pagination and sorting options
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of posts per page
        in: query
        name: limit
        type: integer
      - default: newest
        description: Sort by 'newest' ord 'oldest'
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Get All Posts
      tags:
      - Post
    post:
      consumes:
      - application/json
      description: Create post on Blog Takehome
      parameters:
      - description: Create post details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreatePostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Create Post
      tags:
      - Post
  /api/v1/posts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete post with param post id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Delete Post
      tags:
      - Post
    get:
      consumes:
      - application/json
      description: Get post detail with Post ID (this data get from cache by Redis)
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Get Post Detail
      tags:
      - Post
    put:
      consumes:
      - application/json
      description: Update post with param post id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Update post details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdatePostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Update Post
      tags:
      - Post
  /api/v1/posts/{id}/comments:
    get:
      consumes:
      - application/json
      description: Get all comments on post by post id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of posts per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Get All Comments
      tags:
      - Comment
    post:
      consumes:
      - application/json
      description: Create comment on post by post id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Create comment details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.PostCommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Create Comment
      tags:
      - Comment
  /api/v1/register:
    post:
      consumes:
      - application/json
      description: Register a new user for post and comment
      parameters:
      - description: User registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Register a new user
      tags:
      - User
swagger: "2.0"
